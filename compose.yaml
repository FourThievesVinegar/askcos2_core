services:
  app:
    image: askcos2-core:dev
    hostname: app
    restart: always
    env_file: .env
    command: python app.py
    ports:
      - "9100:9100"

  rabbitmq:
    image: rabbitmq:3.11-alpine
    hostname: rabbitmq
    restart: always
    expose:
      - "${RABBITMQ_PORT}"

  redis:
    image: redis:7.0-alpine
    hostname: redis
    env_file: .env
    restart: always
    expose:
      - "${REDIS_PORT}"
    volumes:
      - "redisdata:/data"
    command: redis-server --port ${REDIS_PORT}

  generic_celery_worker:
    image: askcos2-core:dev
    restart: always
    env_file: .env
    command: sh scripts/start_celery_worker.sh 100 generic generic_worker
    depends_on:
      - rabbitmq
      - redis

  custom_celery_worker:
    image: askcos2-core:dev
    restart: always
    env_file: .env
    command: sh scripts/start_celery_worker.sh ${CELERY_CONCURRENCY} ${CELERY_QUEUE} ${CELERY_WORKER}
    depends_on:
      - rabbitmq
      - redis

  backend_service:
    image: ${BACKEND_IMAGE}
    hostname: ${BACKEND_HOSTNAME}
    restart: always
    env_file: .env
    expose:
      - "${BACKEND_PORT}"
    command: ${BACKEND_START_COMMAND}

volumes:
  redisdata:
